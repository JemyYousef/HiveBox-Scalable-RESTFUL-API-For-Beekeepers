name: CI/CD Workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Ensure `sh` and `bash` Shell Availability
      run: |
        sudo apt-get update
        sudo apt-get install -y dash bash
        sudo ln -sf /bin/dash /bin/sh  # Force link sh to dash

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Verify Java Installation
      run: |
        ls -l /usr/lib/jvm/
        ls -l /usr/lib/jvm/temurin-17-jdk-amd64/bin/
        /usr/lib/jvm/temurin-17-jdk-amd64/bin/java -version

    - name: Install SonarScanner
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip

        # Add SonarScanner to PATH
        echo 'SONAR_SCANNER_HOME=$(pwd)/sonar-scanner-4.6.2.2472-linux' >> $GITHUB_ENV
        echo 'export PATH=$SONAR_SCANNER_HOME/bin:$PATH' >> $GITHUB_ENV
        source $GITHUB_ENV

    - name: Run SonarQube Scan
      shell: bash
      env:
        JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
        PATH: /usr/lib/jvm/temurin-17-jdk-amd64/bin:$SONAR_SCANNER_HOME/bin:$PATH
      run: |
        sonar-scanner \
        -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
        -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
