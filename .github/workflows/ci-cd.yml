name: CI/CD Workflow

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt

    - name: Lint code
      run: flake8 .

    - name: Lint Dockerfile
      run: |
        curl -fsSL https://github.com/hadolint/hadolint/releases/download/v1.17.3/hadolint-Linux-x86_64 -o hadolint
        chmod +x hadolint
        ./hadolint Dockerfile

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build -t ahmedgamalyousef/hivebox2:latest .

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: ahmedgamalyousef/hivebox2:latest
        options: --privileged
        ports:
          - 5000:5000
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    - name: Start Falsk App
      run: nohup python app.py &

    - name: wait for the server to start
      run: sleep 10 

    - name: Run integration tests
      run: |
        python -m pytest test_app.py

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_LOGIN }}

  terrascan:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run Terrascan
      uses: accurics/terrascan-action@v1

  push_image:
    runs-on: ubuntu-latest
    needs: terrascan
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker image
      run: |
        docker build -t ahmedgamalyousef/hivebox2:latest .
        docker tag ahmedgamalyousef/hivebox2:latest ghcr.io/${{ github.repository }}/ahmedgamalyousef/hivebox2:latest
        docker push ghcr.io/${{ github.repository }}/ahmedgamalyousef/hivebox2:latest
